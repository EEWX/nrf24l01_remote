###############################################################################
#
# IAR C/C++ Compiler V2.20.1.176 for STM8                 23/Jun/2020  20:11:21
# Copyright 2010-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for STMicroelectronics STM8
#
#    Source file  =  E:\MyDesign\ToyRemote\MCU Unit\Program\User\system.c
#    Command line =  
#        "E:\MyDesign\ToyRemote\MCU Unit\Program\User\system.c" -e -Om
#        --no_unroll --no_inline --no_tbaa --no_cross_call --debug --code_model
#        small --data_model medium -o "E:\MyDesign\ToyRemote\MCU
#        Unit\Program\Debug\Obj" --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.3\stm8\LIB\dlstm8smn.h" -D STM8L15X_MD
#        -lCN "E:\MyDesign\ToyRemote\MCU Unit\Program\Debug\List" -I
#        "E:\MyDesign\ToyRemote\MCU
#        Unit\Program\STM8L15x_StdPeriph_Driver\inc\" -I
#        "E:\MyDesign\ToyRemote\MCU Unit\Program\AtomOS1.3\kernel\" -I
#        "E:\MyDesign\ToyRemote\MCU Unit\Program\AtomOS1.3\ports\stm8\" -I
#        "E:\MyDesign\ToyRemote\MCU Unit\Program\User\" --vregs 16
#    List file    =  
#        E:\MyDesign\ToyRemote\MCU Unit\Program\Debug\List\system.lst
#    Object file  =  E:\MyDesign\ToyRemote\MCU Unit\Program\Debug\Obj\system.o
#
###############################################################################

E:\MyDesign\ToyRemote\MCU Unit\Program\User\system.c
      1          #include "stm8l15x.h"
      2          #include "system.h"
      3          #include "atomtimer.h"
      4          #include "encoder.h"
      5          #include <stdio.h>
      6          
      7          
      8          void SYSTEM_AnalogCompensate(void);
      9          

   \                                 In section .near_func.text, align 1
     10          void SYSTEM_Init(void)
     11          {
     12            GPIO_Init(SYSTEM_PWR_HOLD_GPIO,SYSTEM_PWR_HOLD_PIN,GPIO_Mode_Out_PP_High_Slow);
   \                     SYSTEM_Init:
   \   000000 35 D0 ....   MOV       S:?b0, #0xd0
   \   000004 A6 80        LD        A, #0x80
   \   000006 AE 5014      LDW       X, #0x5014
   \   000009 CD ....      CALL      L:GPIO_Init
     13            GPIO_Init(SYSTEM_PWR_SAVE_GPIO,SYSTEM_PWR_SAVE_PIN,GPIO_Mode_Out_PP_High_Slow);
   \   00000C 35 D0 ....   MOV       S:?b0, #0xd0
   \   000010 A6 40        LD        A, #0x40
   \   000012 AE 5014      LDW       X, #0x5014
   \   000015 CD ....      CALL      L:GPIO_Init
     14            GPIO_Init(SYSTEM_PWR_KEY_GPIO,SYSTEM_PWR_KEY_PIN,GPIO_Mode_In_FL_No_IT);
   \   000018 3F ..        CLR       S:?b0
   \   00001A A6 40        LD        A, #0x40
   \   00001C AE 5014      LDW       X, #0x5014
   \   00001F CD ....      CALL      L:GPIO_Init
     15            
     16            //---------Use DAC to generate DC offset to compensate thermal couple amplifier
     17            CLK_PeripheralClockConfig(CLK_Peripheral_DAC,ENABLE);
   \   000022 35 01 ....   MOV       S:?b0, #0x1
   \   000026 A6 07        LD        A, #0x7
   \   000028 CD ....      CALL      L:CLK_PeripheralClockConfig
     18            GPIO_Init(SYSTEM_DAC_GPIO,SYSTEM_DAC_PIN,GPIO_Mode_In_FL_No_IT);
   \   00002B 3F ..        CLR       S:?b0
   \   00002D A6 01        LD        A, #0x1
   \   00002F AE 5019      LDW       X, #0x5019
   \   000032 CD ....      CALL      L:GPIO_Init
     19            DAC_Init(DAC_Channel_1,DAC_Trigger_None,DAC_OutputBuffer_Enable);
   \   000035 3F ..        CLR       S:?b1
   \   000037 35 30 ....   MOV       S:?b0, #0x30
   \   00003B 4F           CLR       A
   \   00003C CD ....      CALL      L:DAC_Init
     20            DAC_Cmd(DAC_Channel_1,ENABLE);
   \   00003F 35 01 ....   MOV       S:?b0, #0x1
   \   000043 4F           CLR       A
   \   000044 CD ....      CALL      L:DAC_Cmd
     21            DAC_SetChannel1Data(DAC_Align_12b_R,DEFAULT_DAC_VALUE);
   \   000047 AE 06F8      LDW       X, #0x6f8
   \   00004A 4F           CLR       A
   \   00004B CD ....      CALL      L:DAC_SetChannel1Data
     22            
     23          //  SYSTEM_AnalogCompensate();
     24            
     25            //-----------Cross zero comparator configuration------------------
     26            CLK_PeripheralClockConfig(CLK_Peripheral_COMP,ENABLE);
   \   00004E 35 01 ....   MOV       S:?b0, #0x1
   \   000052 A6 15        LD        A, #0x15
   \   000054 CD ....      CALL      L:CLK_PeripheralClockConfig
     27            COMP_VrefintOutputCmd(ENABLE);
   \   000057 A6 01        LD        A, #0x1
   \   000059 CD ....      CALL      L:COMP_VrefintOutputCmd
     28           // GPIO_Init(SYSTEM_VREF_GPIO,SYSTEM_VREF_PIN,GPIO_Mode_In_FL_No_IT);
     29            COMP_Init(COMP_InvertingInput_VREFINT,COMP_OutputSelect_TIM2IC2,COMP_Speed_Fast);
   \   00005C 35 04 ....   MOV       S:?b1, #0x4
   \   000060 3F ..        CLR       S:?b0
   \   000062 A6 10        LD        A, #0x10
   \   000064 CD ....      CALL      L:COMP_Init
     30            SYSCFG_RIIOSwitchConfig(RI_IOSwitch_22,ENABLE);       //PD1 analog switch close
   \   000067 35 01 ....   MOV       S:?b0, #0x1
   \   00006B A6 17        LD        A, #0x17
   \   00006D CD ....      CALL      L:SYSCFG_RIIOSwitchConfig
     31            SYSCFG_RIIOSwitchConfig(RI_IOSwitch_8,ENABLE);       //PD7 analog switch close, enable Vref output to PD7
   \   000070 35 01 ....   MOV       S:?b0, #0x1
   \   000074 A6 22        LD        A, #0x22
   \   000076 CD ....      CALL      L:SYSCFG_RIIOSwitchConfig
     32            atomTimerDelay(10);
   \   000079 AE 000A      LDW       X, #0xa
   \   00007C BF ..        LDW       S:?w1, X
   \   00007E 5F           CLRW      X
   \   00007F BF ..        LDW       S:?w0, X
   \   000081 CC ....      JP        L:atomTimerDelay
     33            
     34          }
     35          
     36          

   \                                 In section .near_func.text, align 1
     37          void SYSTEM_InternalReferenceOutput(FunctionalState NewState)
     38          {
   \                     SYSTEM_InternalReferenceOutput:
   \   000000 3B ....      PUSH      S:?b8
   \   000003 B7 ..        LD        S:?b8, A
     39            CLK_PeripheralClockConfig(CLK_Peripheral_COMP,ENABLE);
   \   000005 35 01 ....   MOV       S:?b0, #0x1
   \   000009 A6 15        LD        A, #0x15
   \   00000B CD ....      CALL      L:CLK_PeripheralClockConfig
     40            COMP_VrefintOutputCmd(ENABLE);
   \   00000E A6 01        LD        A, #0x1
   \   000010 CD ....      CALL      L:COMP_VrefintOutputCmd
     41            CLK_PeripheralClockConfig(CLK_Peripheral_ADC1,ENABLE);
   \   000013 35 01 ....   MOV       S:?b0, #0x1
   \   000017 A6 10        LD        A, #0x10
   \   000019 CD ....      CALL      L:CLK_PeripheralClockConfig
     42            ADC_VrefintCmd(ENABLE);
   \   00001C A6 01        LD        A, #0x1
   \   00001E CD ....      CALL      L:ADC_VrefintCmd
     43            SYSCFG_RIIOSwitchConfig(RI_IOSwitch_8,NewState);       //PD7 analog switch close, enable Vref output to PD7
   \   000021 45 .. ..     MOV       S:?b0, S:?b8
   \   000024 A6 22        LD        A, #0x22
   \   000026 CD ....      CALL      L:SYSCFG_RIIOSwitchConfig
     44          }
   \   000029 32 ....      POP       S:?b8
   \   00002C 81           RET
     45          
     46          
     47          

   Section sizes:

   Bytes  Function/Label
   -----  --------------
     132  SYSTEM_Init
      45  SYSTEM_InternalReferenceOutput

 
 177 bytes in section .near_func.text
 
 177 bytes of CODE memory

Errors: none
Warnings: 1
